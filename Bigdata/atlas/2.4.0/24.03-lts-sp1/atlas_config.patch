--- a/bin/atlas_config.py   2025-06-28 10:16:09.154265752 +0000
+++ b/bin/atlas_config.py   2025-06-28 10:00:31.479221040 +0000
@@ -529,15 +529,17 @@

 def wait_for_startup(confdir, wait):
     count = 0
+    started = False
     host = get_atlas_url_host(confdir)
     port = get_atlas_url_port(confdir)
-    while True:
+    pid_file = pidFile(atlasDir())
+    while not started:
         try:
             s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
             s.settimeout(1)
             s.connect((host, int(port)))
             s.close()
-            break
+            started = True
         except Exception as e:
             # Wait for 1 sec before next ping
             sys.stdout.write('.')
@@ -546,6 +548,14 @@

         if count > wait:
             s.close()
+            sys.stdout.write('\nAtlas Web-UI startup timed out! But, wait for it...')
+            sys.stdout.flush()
+            break
+
+        if not os.path.exists(pid_file):
+            sys.stdout.write('\nApache Atlas startup failed!\nCheck logs: /apache-atlas/logs/application.log')
+            sys.stdout.flush()
+            exit()
             break

         count = count + 1
@@ -584,14 +594,14 @@

     if zk_url is None:
         if port is None:
-            cmd = [os.path.join(dir, solrScript), action]
+            cmd = [os.path.join(dir, solrScript), action, '-force']
         else:
-            cmd = [os.path.join(dir, solrScript), action, '-p', str(port)]
+            cmd = [os.path.join(dir, solrScript), action, '-force', '-p', str(port)]
     else:
         if port is None:
-            cmd = [os.path.join(dir, solrScript), action, '-z', zk_url]
+            cmd = [os.path.join(dir, solrScript), action, '-force', '-z', zk_url]
         else:
-            cmd = [os.path.join(dir, solrScript), action, '-z', zk_url, '-p', port]
+            cmd = [os.path.join(dir, solrScript), action, '-force', '-z', zk_url, '-p', port]

     if homedir is not None:
         if not os.path.exists(homedir) :
@@ -614,7 +624,7 @@
     if IS_WINDOWS:
         solrScript = "solr.cmd"

-    cmd = [os.path.join(dir, solrScript), 'create', '-c', index, '-d', confdir,  '-shards',  solrShards(),  '-replicationFactor', solrReplicationFactor()]
+    cmd = [os.path.join(dir, solrScript), 'create', '-c', index, '-d', confdir,  '-shards',  solrShards(),  '-replicationFactor', solrReplicationFactor(), '-force']

     return runProcess(cmd, logdir, False, wait)
