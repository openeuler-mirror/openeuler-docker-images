name: dotnet-runtime
category: others
description: Dotnet Runtime (.NET Runtime)是一个运行时环境，用于执行基于.NET平台的应用程序。它提供了必要的组件和功能，使得.NET应用程序能够在特定的操作系统上运行。
environment: |
  本应用在Docker环境中运行，安装Docker执行如下命令
  ```
  yum install -y docker
  ```
tags: |
  dotnet-runtime镜像的Tag由其版本信息和基础镜像版本信息组成，详细内容如下

  |    Tag   |  Currently  |   Architectures  |
  |----------|-------------|------------------|
  |[8.0.3-oe2203sp3](https://gitee.com/openeuler/openeuler-docker-images/blob/master/Others/dotnet-runtime/8.0.3/22.03-lts-sp3/Dockerfile)| Dotnet-runtime 8.0.3 on openEuler 22.03-LTS-SP3 | amd64, arm64 |
  |[8.0.7-oe2203sp3](https://gitee.com/openeuler/openeuler-docker-images/blob/master/Others/dotnet-runtime/8.0.7/22.03-lts-sp3/Dockerfile)| Dotnet-runtime 8.0.7 on openEuler 22.03-LTS-SP3 | amd64, arm64 |
  |[8.0.8-oe2203sp3](https://gitee.com/openeuler/openeuler-docker-images/blob/master/Others/dotnet-runtime/8.0.8/22.03-lts-sp3/Dockerfile)| Dotnet-runtime 8.0.8 on openEuler 22.03-LTS-SP3 | amd64, arm64 |
  |[8.0.10-oe2003sp4](https://gitee.com/openeuler/openeuler-docker-images/blob/master/Others/dotnet-runtime/8.0.10/20.03-lts-sp4/Dockerfile)| Dotnet-runtime 8.0.10 on openEuler 20.03-LTS-SP4 | amd64, arm64 |
  |[8.0.10-oe2203sp1](https://gitee.com/openeuler/openeuler-docker-images/blob/master/Others/dotnet-runtime/8.0.10/22.03-lts-sp1/Dockerfile)| Dotnet-runtime 8.0.10 on openEuler 22.03-LTS-SP1 | amd64, arm64 |
  |[8.0.10-oe2203sp3](https://gitee.com/openeuler/openeuler-docker-images/blob/master/Others/dotnet-runtime/8.0.10/22.03-lts-sp3/Dockerfile)| Dotnet-runtime 8.0.10 on openEuler 22.03-LTS-SP3 | amd64, arm64 |
  |[8.0.10-oe2203sp4](https://gitee.com/openeuler/openeuler-docker-images/blob/master/Others/dotnet-runtime/8.0.10/22.03-lts-sp4/Dockerfile)| Dotnet-runtime 8.0.10 on openEuler 22.03-LTS-SP4 | amd64, arm64 |
  |[8.0.10-oe2403lts](https://gitee.com/openeuler/openeuler-docker-images/blob/master/Others/dotnet-runtime/8.0.10/24.03-lts/Dockerfile)| Dotnet-runtime 8.0.10 on openEuler 24.03-LTS | amd64, arm64 |

download: |
  拉取镜像到本地
  ```
  docker pull openeuler/dotnet-runtime:{Tag}
  ```

usage: |
  - 启动容器
    ```
    docker run -d --name my-dotnet-runtime openeuler/dotnet-runtime:{Tag}
    ```
    用户可根据自身需求选择对应版本的{Tag}、容器启动的选项。`my-dotnet-runtime`启动之后，通过`http://localhost:8080`访问服务。
  
  - 使用示例

    以HelloWorld应用为例说明该容器镜像使用方法
    1. 创建HelloWorld.csproj文件并填入以下内容
        ```
        <Project Sdk="Microsoft.NET.Sdk">
          <PropertyGroup>
            <OutputType>Exe</OutputType>
            <TargetFramework>net{x.x}</TargetFramework>
            <ImplicitUsings>enable</ImplicitUsings>
            <Nullable>enable</Nullable>
          </PropertyGroup>
        </Project>
        ```
        注意，上面`{x.x}`需要替换成相应的dotnet版本号。

    2. 创建Program.cs文件并填入以下内容
        ```
        Console.WriteLine("Hello, World!");
        ```

    3. 发布应用
        ```
        dotnet publish -c Release -o /app
        ```
        执行过程会出现以下关键信息：
        ```
        Determining projects to restore...
        Restored /tmp/demo/HelloWorld.csproj (in 59 ms).
        HelloWorld -> /tmp/demo/bin/Release/net{x.x}/HelloWorld.dll
        HelloWorld -> /tmp/demo/bin/Release/net{x.x}/publish/
        ```

    4. 使用`openeuler/dotnet-runtime:{Tag}`运行该应用
        ```
        docker run --rm -v $PWD/app:/app openeuler/dotnet-runtime:{Tag} /app/HelloWorld.dll 
        ```
        注意，发布应用使用的dotnet版本`{x.x}`必须和`{Tag}`所指向的dotnet版本一致。

  - 容器测试

    查看运行日志
    ```
    docker logs -f my-dotnet-runtime
    ```

    运行启动shell会话
    ```
    docker run -it --entrypoint /bin/bash --name my-dotnet-runtime openeuler/dotnet-runtime:{Tag}
    ```

license: MIT license
similar_packages:
  - Java Runtime Environment (JRE): JRE是用于执行基于Java平台的应用程序的运行时环境。它提供了类似的功能，包括字节码解释和执行、垃圾回收、异常处理等。
  - Python Runtime: Python运行时是用于执行基于Python编程语言的应用程序的环境。它提供了解释和执行Python脚本的功能，并提供了许多标准库和扩展库，用于各种计算和应用开发。
  - Node.js Runtime: Node.js是一个基于Chrome V8引擎的JavaScript运行时。它允许使用JavaScript编写服务器端的应用程序，并提供了许多内置的库和模块，用于处理网络请求、文件系统访问等任务。
  - Go Runtime: Go是一种编程语言，Go运行时用于执行基于Go语言编写的应用程序。它提供了垃圾回收、协程（goroutine）管理、并发编程等功能，使得Go语言应用程序能够高效地运行。
dependency:
  - .NET Core