name: splitter
category: others
description: Splitter 是用于拆分 RPM 包生成 slices，并能为软件包生成初始的 SDF（Slice Definition File）文件。它是 openEuler distroless 镜像构建生态中的核心工具，通过将软件包细粒度切分，实现最终镜像的最小化和安全加固。
environment: |
  本应用在Docker环境中运行，安装Docker执行如下命令
  ```
  yum install -y docker
  ```
tags: |
  splitter镜像的Tag由其版本信息和基础镜像版本信息组成，详细内容如下

  |    Tag   |  Currently  |   Architectures  |
  |----------|-------------|------------------|
  |[1.0.1-oe2403lts](https://gitee.com/openeuler/openeuler-docker-images/blob/master/Others/splitter/1.0.1/24.03-lts/Dockerfile)| Splitter 1.0.1 on openEuler 24.03-LTS | amd64, arm64 |
  |[1.0.1-oe2403sp1](https://gitee.com/openeuler/openeuler-docker-images/blob/master/Others/splitter/1.0.1/24.03-lts-sp1/Dockerfile)| Splitter on openEuler 24.03-LTS-sp1 | amd64, arm64 |
  |[1.0.1-oe2403sp2](https://gitee.com/openeuler/openeuler-docker-images/blob/master/Others/splitter/1.0.1/24.03-lts-sp2/Dockerfile)| Splitter on openEuler 24.03-LTS-sp1 | amd64, arm64 |

download: |
  拉取镜像到本地
  ```
  docker pull openeuler/splitter:{Tag}
  ```

usage: |
  openeuler/splitter镜像被设计为命令行工具使用，您可以通过`docker run`直接执行splitter命令，并将宿主机目录挂载以获取输出结果。

  ### 1. 生成 Slices (`splitter cut`)
  这是镜像最核心的用途，用于根据SDF规则从RPM包生成slices。

  - **步骤一：在宿主机准备输出目录**
    ```bash
    mkdir -p ./output
    ```

  - **步骤二：执行 `splitter cut` 命令**
    以下示例将为openEuler 24.03-LTS (x86_64) 生成 `python3_standard` slice。
    ```bash
    docker run \
      -v "$(pwd)/output":/output \
      --rm \
      openeuler/splitter:{Tag} \
      /bin/bash -c "splitter cut -r 24.03-LTS -a x86_64 -o /output python3_standard"
    ```
    命令执行后，生成的slice包将保存在宿主机的 `./output` 目录下。

  ### 2. 生成 SDF 文件 (`splitter gen`)
  splitter工具还可以为指定的RPM包自动生成初始的SDF文件。

  - **步骤一：在宿主机准备输出目录**
    ```bash
    mkdir -p ./output
    ```

  - **步骤二：执行 `splitter gen` 命令**
    该命令会先在容器内安装目标软件包（本例中为`brotli`），然后为其生成SDF文件。
    ```bash
    docker run \
      -v "$(pwd)/output":/output \
      --rm \
      openeuler/splitter:{Tag} \
      /bin/bash -c "dnf install -y brotli && splitter gen -r 24.03-LTS -a x86_64 -o /output -p brotli"
    ```
    生成的SDF文件（如`brotli.yaml`）将保存在宿主机的 `./output` 目录下。

  ### 3. 进入交互式环境
  如需调试或探索，可以启动一个交互式Shell。
  ```bash
  docker run -it --rm openeuler/splitter:{Tag} bash
  ```

license: Mulan PSL v2
similar_packages:
  - N/A
dependency:
  - python3
  - git
  - python3-pip
  - cpio
  - binutils
  - file
