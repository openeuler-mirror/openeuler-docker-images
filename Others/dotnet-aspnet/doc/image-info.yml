name: dotnet-aspnet
category: others
description: Dotnet-aspnet（ASP.NET Core）是一个开源跨平台框架，用于构建基于云的现代互联网连接应用程序，例如Web应用程序、物联网应用程序和移动后端。ASP.NET Core应用程序在.NET上运行。
environment: |
  本应用在Docker环境中运行，安装Docker执行如下命令
  ```
  yum install -y docker
  ```
tags: |
  dotnet-aspnet镜像的Tag由其版本信息和基础镜像版本信息组成，详细内容如下

  |    Tag   |  Currently  |   Architectures  |
  |----------|-------------|------------------|
  |[8.0.3-oe2203sp3](https://gitee.com/openeuler/openeuler-docker-images/blob/master/Others/dotnet-aspnet/8.0.3/22.03-lts-sp3/Dockerfile)| Dotnet-aspnet 8.0.3 on openEuler 22.03-LTS-SP3 | amd64, arm64 |
  |[8.0.7-oe2203sp3](https://gitee.com/openeuler/openeuler-docker-images/blob/master/Others/dotnet-aspnet/8.0.7/22.03-lts-sp3/Dockerfile)| Dotnet-aspnet 8.0.7 on openEuler 22.03-LTS-SP3 | amd64, arm64 |
  |[8.0.8-oe2203sp3](https://gitee.com/openeuler/openeuler-docker-images/blob/master/Others/dotnet-aspnet/8.0.8/22.03-lts-sp3/Dockerfile)| Dotnet-aspnet 8.0.8 on openEuler 22.03-LTS-SP3 | amd64, arm64 |
  |[8.0.10-oe2003sp4](https://gitee.com/openeuler/openeuler-docker-images/blob/master/Others/dotnet-aspnet/8.0.10/20.03-lts-sp4/Dockerfile)| Dotnet-aspnet 8.0.10 on openEuler 20.03-LTS-SP4 | amd64, arm64 |
  |[8.0.10-oe2203sp1](https://gitee.com/openeuler/openeuler-docker-images/blob/master/Others/dotnet-aspnet/8.0.10/22.03-lts-sp1/Dockerfile)| Dotnet-aspnet 8.0.10 on openEuler 22.03-LTS-SP1 | amd64, arm64 |
  |[8.0.10-oe2203sp3](https://gitee.com/openeuler/openeuler-docker-images/blob/master/Others/dotnet-aspnet/8.0.10/22.03-lts-sp3/Dockerfile)| Dotnet-aspnet 8.0.10 on openEuler 22.03-LTS-SP3 | amd64, arm64 |
  |[8.0.10-oe2203sp4](https://gitee.com/openeuler/openeuler-docker-images/blob/master/Others/dotnet-aspnet/8.0.10/22.03-lts-sp4/Dockerfile)| Dotnet-aspnet 8.0.10 on openEuler 22.03-LTS-SP4 | amd64, arm64 |
  |[8.0.10-oe2403lts](https://gitee.com/openeuler/openeuler-docker-images/blob/master/Others/dotnet-aspnet/8.0.10/24.03-lts/Dockerfile)| Dotnet-aspnet 8.0.10 on openEuler 24.03-LTS | amd64, arm64 |

download: |
  拉取镜像到本地
  ```
  docker pull openeuler/dotnet-aspnet:{Tag}
  ```

usage: |
  - 启动容器
    ```
    docker run -d --name my-dotnet-aspnet -p 8080:8080 openeuler/dotnet-aspnet:{Tag}
    ```
    用户可根据自身需求选择对应版本的{Tag}、容器启动的选项。`my-dotnet-aspnet`启动之后，通过`http://localhost:8080`访问服务。
  
  - 使用示例

    以HelloWorld应用为例
    1. 获取dotnetcore-docs-hello-world源码并进入根目录
        ```
        git clone https://github.com/Azure-Samples/dotnetcore-docs-hello-world
        cd dotnetcore-docs-hello-world
        ```

    2. 修改应用发布的dotnet版本
        打开`dotnetcoresample.csproj`文件， 将`<TargetFramework>net{x.x}</TargetFramework>`中的`{x.x}`修改为期望的dotnet版本。

    3. 发布应用
        ```
        dotnet publish -c Release -o /app --self-contained false
        ```
        执行过程会出现以下关键信息：
        ```
        Determining projects to restore...
        All projects are up-to-date for restore.
        dotnetcoresample -> /tmp/dotnetcore-docs-hello-world/bin/Release/net{x.x}/dotnetcoresample.dll
        dotnetcoresample -> /app/
        ```

    4. 使用`openeuler/dotnet-aspnet:{Tag}`运行该应用
        ```
        docker run --rm -v /app:/app -p 8080:8080 openeuler/dotnet-aspnet:{Tag} /app/dotnetcoresample.dll 
        ```
        注意，发布应用使用的dotnet版本`{x.x}`必须和`{Tag}`所指向的dotnet版本一致。

  - 容器测试

    查看运行日志
    ```
    docker logs -f my-dotnet-aspnet
    ```

    运行启动shell会话
    ```
    docker run -it --entrypoint /bin/bash --name my-dotnet-aspnet -p 8080:8080 openeuler/dotnet-aspnet:{Tag}
    ```

license: MIT license
similar_packages:
  - Ruby on Rails: Ruby on Rails（简称 Rails）是一个使用Ruby编程语言开发的开源Web应用程序框架。它提供了类似于ASP.NET的MVC（Model-View-Controller）架构以及许多内置功能，如路由、模板引擎、数据库访问等。
  - Django: Django是一个使用Python编程语言开发的高级Web应用程序框架。它提供了类似于ASP.NET的MVC架构，并内置了许多功能和工具，如数据模型、表单处理、认证系统等。
  - Laravel: Laravel是一个使用PHP编程语言开发的Web应用程序框架。它提供了类似于ASP.NET的MVC架构，并包含了许多特性和工具，如路由、数据库访问、身份验证等。
  - Express.js: Express.js是一个使用JavaScript编程语言开发的Web应用程序框架，基于Node.js运行时。它提供了类似于ASP.NET的路由、中间件、模板引擎等功能，用于构建快速和可扩展的Web应用程序。
dependency:
  - .NET Runtime