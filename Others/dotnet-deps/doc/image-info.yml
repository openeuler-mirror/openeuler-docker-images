name: dotnet-deps
category: others
description: Dotnet-deps镜像供开发人员对独立的.NET和ASP.NET应用程序进行分层。它仅包含运行标准独立.NET应用程序所需的运行时依赖项：ca-certificates, glibc, libgcc, libicu, openssl-libs, libstdc++, tzdata, zlib。
environment: |
  本应用在Docker环境中运行，安装Docker执行如下命令
  ```
  yum install -y docker
  ```
tags: |
  dotnet-deps镜像的Tag由其版本信息和基础镜像版本信息组成，详细内容如下

  |    Tag   |  Currently  |   Architectures  |
  |----------|-------------|------------------|
  |[8.0-oe2203sp3](https://gitee.com/openeuler/openeuler-docker-images/blob/master/Others/dotnet-deps/8.0/22.03-lts-sp3/Dockerfile)| It includes the runtime dependencies required to run a standard self-contained .NET application of version 8.0.x on openEuler 22.03-LTS-SP3 | amd64, arm64 |

download: |
  拉取镜像到本地
  ```
  docker pull openeuler/dotnet-deps:{Tag}
  ```

usage: |
  - 启动容器
    ```
    docker run -d --name my-dotnet-deps openeuler/dotnet-deps:{Tag}
    ```
    用户可根据自身需求选择对应版本的{Tag}。
  
  - 使用示例

    Dotnet-deps容器镜像用于运行独立的（self-contained）.NET应用，使用方法参考以下HelloWorld应用示例
    1. 获取dotnetcore-docs-hello-world源码并进入根目录
        ```
        git clone https://github.com/Azure-Samples/dotnetcore-docs-hello-world
        cd dotnetcore-docs-hello-world
        ```

    2. 修改dotnetcoresample.csproj文件

        打开`dotnetcoresample.csproj`文件，修改成以下内容
        ```
        <Project Sdk="Microsoft.NET.Sdk.Web">
        <PropertyGroup>
            <TargetFramework>net{x.x}</TargetFramework>
            <Nullable>enable</Nullable>
            <ImplicitUsings>enable</ImplicitUsings>
            <RuntimeIdentifiers>linux-x64;linux-arm64</RuntimeIdentifiers>
        </PropertyGroup>
        </Project>
        ```
        其中`{x.x}`修改为期望的dotnet版本。

    3. 发布应用
        ```
        dotnet publish -c Release -o /app -r linux-x64 --self-contained true
        ```
        执行过程会出现以下关键信息：
        ```
        Determining projects to restore...
        All projects are up-to-date for restore.
        dotnetcoresample -> /home/deps/dotnetcore-docs-hello-world/bin/Release/net{x.x}/linux-x64/dotnetcoresample.dll
        dotnetcoresample -> /app/
        ```

    4. 使用`openeuler/dotnet-deps:{Tag}`运行该应用
        ```
        docker run --rm -v /app:/app openeuler/dotnet-deps:{Tag} /app/dotnetcoresample 
        ```
        注意，发布应用使用的dotnet版本`{x.x}`必须和`{Tag}`所指向的dotnet版本一致。

  - 容器测试

    查看运行日志
      ```
      docker logs -f my-dotnet-deps
      ```

    运行启动shell会话
      ```
      docker run -it --name my-dotnet-deps openeuler/dotnet-deps:{Tag} /bin/bash
      ```

license: N/A
similar_packages:
  - N/A
dependency:
  - ca-certificates
  - glibc
  - libgcc
  - libicu
  - openssl-libs
  - libstdc++
  - tzdata
  - zlib