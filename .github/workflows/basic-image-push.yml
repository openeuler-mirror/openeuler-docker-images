name: openEuler Basic Image

on: 
  pull_request:
    # Only trigger job when file in openeuler changed
    paths:
      - 'openeuler'
      - '.github/workflows/basic-image-push.yml'
    branches: [ master ]

jobs:
  build:
    strategy:
      matrix:
        include:
          - version: 20.03-lts-sp1
            tags: openeuler/openeuler:20.03-lts-sp1
          - version: 20.03-lts-sp2
            tags: openeuler/openeuler:20.03-lts-sp2
          - version: 20.09
            tags: openeuler/openeuler:20.09
          - version: 21.03
            tags: openeuler/openeuler:21.03
          - version: 21.09
            tags: openeuler/openeuler:21.09
          - version: 20.03-lts-sp3
            tags: openeuler/openeuler:20.03-lts-sp3,openeuler/openeuler:20.03
          - version: 22.03-lts
            tags: openeuler/openeuler:22.03-lts,openeuler/openeuler:latest,openeuler/openeuler:22.03

    runs-on: ubuntu-latest

    steps:

      - name: Checkout repository
        uses: actions/checkout@v2

      - name: cache
        uses: actions/cache@v2
        with:
          path: |
            openeuler/2*
          key: build-${{ hashFiles('openeuler/*') }}
          restore-keys: |
            build-
      - name: Download openEuler images
        working-directory: openeuler
        run: ./download.sh ${{ matrix.version }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: ./openeuler/${{ matrix.version }}/
          push: true
          tags: ${{ matrix.tags }}
          platforms: ${{ if eq matrix.version '22.03-lts' then 'linux/amd64,linux/arm64,linux/loong64' else 'linux/amd64,linux/arm64' }}

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
